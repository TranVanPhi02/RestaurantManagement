@model ReservationsManagement.Models.Order
@{
    ViewData["Title"] = "Create Order | Reg";
    Layout = "CustomerLayout";
}

@if (ViewBag.IsLogin == true)
{
    <partial name="/Views/Shared/HeaderCustomer.cshtml" />
}
else
{
    <partial name="/Views/Shared/HeaderGuest.cshtml" />
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}



<section class="reservation mt_100 xs_mt_70">
    <div class="container">
        <div class="reservation_bg" style="background: url(images/reservation_bg.jpg);">
            <div class="row">
                <div class="col-xl-6 ms-auto">
                    <div class="reservation_form wow fadeInRight">
                        <h2>Book a Table</h2>
                        <form asp-action="CreateOrder" method="post" id="orderForm">
                            <input type="hidden" id="orderDetailsJson" name="orderDetailsJson">

                            <div class="row">
                                <div class="col-xl-6 col-lg-6">
                                    <div class="reservation_input_single">
                                        <label for="name">Name</label>
                                        <input type="text" name="NameReceiver" placeholder="Name" required>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6">
                                    <div class="reservation_input_single">
                                        <label for="phone">Phone</label>
                                        <input type="text" name="PhoneReceiver" placeholder="Phone" required>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6">
                                    <div class="reservation_input_single">
                                        <label for="date">Select Date</label>
                                        <input type="date" name="Date" required>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6">
                                    <div class="reservation_input_single">
                                        <label>Select Time</label>
                                        <input type="time" name="Time" required>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6">
                                    <div class="reservation_input_single">
                                        <label>Number of People</label>
                                        <input type="number" name="NumberPerson" min="1" required>
                                    </div>
                                </div>

                                <!-- Button chọn món -->
                                <div class="col-xl-12">
                                    <button type="button" class="common_btn" data-bs-toggle="modal" data-bs-target="#menuModal">Choose Menu</button>
                                </div>

                                <!-- Hiển thị danh sách món đã chọn -->
                                <div class="col-xl-12 mt-3">
                                    <h4>Selected Dishes</h4>
                                    <ul id="selectedDishes"></ul>
                                </div>

                                <!-- Submit đặt bàn -->
                                <div class="col-xl-12">
                                    <button type="submit" class="common_btn">Confirm</button>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Popup chọn món ăn -->
<div class="modal fade" id="menuModal" tabindex="-1" aria-labelledby="menuModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Menu Items</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Dish</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.MenuList)
                        {
                            <tr>
                                <td>@item.DishName</td>
                                <td>@item.Price</td>
                                <td><input type="number" class="form-control quantity" data-id="@item.MenuId" min="1" value="1"></td>
                                <td><button class="btn btn-primary add-to-order" data-id="@item.MenuId" data-name="@item.DishName" data-price="@item.Price">Add</button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- Thêm nút xác nhận thêm món vào đơn -->
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="confirmMenu" data-bs-dismiss="modal">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedItems = [];

    // Lắng nghe sự kiện click vào nút "Add" để thêm món vào đơn
    document.querySelectorAll('.add-to-order').forEach(button => {
        button.addEventListener('click', function () {
            let id = this.getAttribute('data-id');
            let name = this.getAttribute('data-name');
            let price = this.getAttribute('data-price');
            let quantity = document.querySelector(`.quantity[data-id="${id}"]`).value;

            let exists = selectedItems.find(item => item.id === id);
            if (exists) {
                exists.quantity = quantity;
            } else {
                selectedItems.push({ id, name, price, quantity });
            }

            updateSelectedDishes();
        });
    });

    // Cập nhật danh sách món đã chọn khi người dùng thêm món
    function updateSelectedDishes() {
        let list = document.getElementById("selectedDishes");
        list.innerHTML = "";
        selectedItems.forEach(item => {
            list.innerHTML += `<li>${item.name} - ${item.quantity} x ${item.price}</li>`;
        });
    }

    // Xử lý sự kiện khi nhấn nút "Confirm"
    document.getElementById("confirmMenu").addEventListener("click", function () {
        // Đảm bảo rằng danh sách selectedItems được tuần tự hóa chính xác thành JSON
        document.getElementById("orderDetailsJson").value = JSON.stringify(selectedItems);
        updateSelectedDishes(); // Hiển thị món ăn đã chọn trong phần hiển thị ở bên ngoài modal
    });

    // Xử lý submit form khi tạo đơn hàng
    document.getElementById("orderForm").addEventListener("submit", function () {
        // Kiểm tra lại JSON của món ăn
        console.log(JSON.stringify(selectedItems)); // Kiểm tra giá trị trước khi gửi
        document.getElementById("orderDetailsJson").value = JSON.stringify(selectedItems);
    });
</script>
